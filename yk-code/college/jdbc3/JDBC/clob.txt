1  引言
上个世纪60年代诞生的互联网，在近十几年的时间里得到了迅猛的发展，其主要的原因是WEB技术的出现。它将世界各地的信息链接起来，使互联网成为最大的信息载体，使地球变的像个小村子，使信息共享和流通的能力延伸到了我们的桌面上。WEB技术是互联网的核心内容，WEB因为具有音频、视频技术，内部交互和易于管理而受到个人和企业的青睐。随着WEB的逐渐发展和成熟，web技术也在逐渐的发展，从HTML到CGI，到3P（ASP、JSP、PHP），再到现在的ASP.NET，已经经过了几个阶段的发展。
1.1  问题定义与内容简介
ASP.NET网络服务体系架构为使用ASP.NET建立网络服务提供了一个高级可编程模板。虽然建立网络服务并不需要使用网络服务平台，但是它具有许多的优点将简化开发过程，并且它使用的编程模型对用ASP或VB工作的开发人员来说是很熟悉的。使用这个可编程模型，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。
本课题的主要目的是对网站设计的相关技术进行理论研究，比较ASP.NET技术的相关特点，并在对各种技术进行系统分析和研究的基础上，借鉴现有系统的一些经验，开发一网站实现相关管理功能。并且通过学习ASP.NET技术并查阅大量关于网站设计技术的文献资料，比较各种技术的优越性，汇总形成相关文档。
在研究学习的基础上，结合相关资料，设计出简洁的具有用户注册登录、信息查看、信息查询等功能的系统。网站实现的基本功能是：（1）信息查看：普通用户和管理员登录系统后可以进行信息查看；（2）信息查询：用户可以登录系统后进行信息查询。
1.2  研究背景及研究意义
随着个人电脑和Internet的普及推广，Web技术得到了迅猛的发展，人们开始越来越依赖网络：企业通过网络可以更有效、便捷的发布信息和推广自己新的产品；个人通过网络可以跟自己的朋友聊天、写信，可以查看新闻，可以在网上娱乐，甚至可以不用出户就可以购买自己喜欢的商品等等，网络带来无尽的便捷和乐趣。设计出好看，适用的网站就成为必要的，现在用于网站设计、开发的技术有很多，譬如ASP、JSP、ASP.NET等等。
其中JSP(Java Server Pages)是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。它是在传统的网页HTML文件中插入Java程序段和JSP标记，从而形成JSP文件。JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
ASP(Active Server Pages活动服务器页面)是一种功能强大的运用于服务器端的脚本编程环境，但是只能用VBScript或者JavaScript这样的非模块语言来编程，而且大量的HTML代码和VBScript、JavaScript代码混合在一起，使得程序员需要修改程序的时候比较困难。
而ASP.NET技术是Microsoft公司推出的新一代动态Web开发技术。ASP.NET不同于ASP和JSP，它是建立在.NET Framework之上，提供了更易于编写而且结构清晰的代码，它使用VB.NET和C#等模块化语言编写程序，提高了代码的再利用性和共享性。ASP.NET在结构上几乎完全是基于组件和模块化的，Web应用程序的开发人员使用这个开发技术可以实现更加模块化的、功能更强大的应用程序。ASP.NET技术在效率、可重用性及代码量上较ASP和JSP都有明显的优势。
使用ASP.NET技术，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。开发人员用ASP.NET生成一个扩展名为.asmx的文件，并把此文件配制为网络应用程序的一部分，就建立起了一个网络服务。 asmx文件包含对在其它地方定义的受控类的引用，或者包含这个类的定义。这个类是由ASP.NET提供的WebService类所派生。公有的类方法在标记上WebMethod属性后，就会成为网络服务方法，把HTTP请求发送到asmx文件中的URL后，这些方法就会被调用。你不必手工为你的网络服务建立一个契约。当被调用者请求时，ASP.NET检查类的元数据，以自动生成SCL文件。客户可通过SOAP，HTTP GET 和HTTP POST提交请求。对方法和参数进行编码的约定是：对HTTP GET，将被编码为查询字符串；对HTTP POST，将被编码为表单数据。HTTP GET 和HTTP POST 的机制不如SOAP有力，但是它们使得客户在访问网络服务时不必支持SOAP。
 ASP.NET 网络服务模型假定了一个无状态服务结构。无状态结构通常比有状态结构更具可扩展性。每次收到一个服务请求后，就生成一个新对象，请求被转化为一个方法调用，当该方法调用返回时对象被销毁。如果这些服务需要跨请求维护状态，那么它们将使用ASP.NET状态管理服务。基于ASP.NET的网络服务在网络应用程序模型中运行，因此它们得到了该模型的所有安全、配制和其它优点。
 ASP.NET 网络服务还提供了一个为在SCL文件中描述的网络服务生成分类的受控代理工具。代理生成器把SCL文件中描述的消息映射成受控类中的方法。代理对应用程序代码隐藏了所有的网络和引导设备，因此使用网络服务看起来就像使用其它受控代码一样。代理将优先使用SOAP链接网络服务，但是它同样支持HTTP GET和 HTTP POST机制。因此HTTP GET和 HTTP POST同样也能被使用。
网络服务为在Internet上绑定应用程序提供了一个利用现存体系架构和应用程序的简单的、灵活的、基于许多标准的模型。网络应用程序很容易与当地开发的服务或已存在的服务集成在一起，而不用考虑开发平台、开发语言或使用的对象模型，以用于实现任何组成的服务或应用程序。
Microsoft .NET框架在现有开发人员技巧之上，提供了一个应用程序模板和关键技术，用于简化安全、可靠、可扩展、高可用性的网络服务的建立、部署和不断的发展。
1.3  可行性分析
1.3.1 技术可行性研究
课题主要是理论研究，研究ASP.NET技术在网站开发中的应用，关键是要查阅大量的关于ASP.NET技术和其他网站开发技术方面的文章和书籍。学校图书馆有大量关于这方面的书籍可以借阅，另外在互联网上也有关于这方面的大量论文可以查阅。另外网站的设计主要使用的是ASP.NET技术，.NET Framework1.1框架作为微软公司已经比较成熟的产品，现在越来越多的网站开发设计都选择它。
1.3.2 经济可行性研究 
课题研究的是ASP.NET技术，设计开发的电子商务网站在PC机上就可以实现，不要考虑其他的设备。也为以后网站设计开发编程技术的选择提供了更多的技术支持。
1.4 论文各章内容介绍 
论文共分为六章，由浅至深的阐述了研究的结论并结合实例进行了说明。
第一章简要的介绍了Microsoft .NET框架，提出了课题研究的背景，并对研究课题做了调研及可行性分析。
第二章主要介绍了WEB技术的发展，简单介绍了ASP，JSP 和PHP技术，详细说明了ASP.NET技术，并将各种网站开发技术做了深入比较。
第三章全面介绍了对实例系统进行总体设计的方案。
第四章介绍系统的详细设计和各功能模块的设计及实现
第五章介绍系统的应用演示，分别以用户和管理员的身份进行了演示分析。
第六章介绍研究成果的评价及其不足的解决方案

2  课题研究分析
2.1  网站开发技术研究
2.1.1 WEB开发技术的发展
WEB程序初期，网站组成是一系列静态的网页，这种程序只允许用户浏览网站的信息，而不能和网站进行交互(即静态网页)，这就大大制约了商业的经营活动。为此，CGI技术出现，基本弥补了不能交互的缺点，是技术上的一种突破，但用户在使用CGI程序时，CGI为每个用户分配一个进程，进程是资源分配的基本单位，这样使资源不能得到完全很好的利用，并且浪费严重。由于计算机资源的有限性，限制了使用网站的用户的数量，导致用户使用中速度相对过慢，不能满足需求。与此同时Microsoft公司和网景公司均看到了CGI的不足，为此分别设计的一套API，分别是ISAPI和NSAPI，这两套API均采用线程机制，每个用户均使用一个线程与网站进行交互，他们的出现使得每个语种如DELPHI、VB等均可以设计web应用程序，WEB程序获得飞速的发展。但ISAPI和NSAPI有两个缺点:一是不太稳定，二是要求程序的设计水平较高不利于普及。1995年java出现后给网站设计带来了曙光，java是一个跨平台的程序设计语言，以其一次编译，处处运行的优势，迅速推广。与此同时网站的软件技术出现了ASP、PHP,JAVA也发展出一个分支JSP,我们一般称之为3P。3P的出现大大降低了网站设计的门槛，为网站普及起着不可磨灭的贡献。
3P的技术各有千秋。ASP是嵌入在HTML中的一种服务器端编程的WEB开发技术，即客户端请求网页时ASP文件先在服务器端编译执行，再以HTML格式传送给客户端浏览器显示，因此客户看不见ASP文件，程序的保密性较好。ASP使用的脚本语言是可扩充的，不仅可以使用默认的VBScript语言，也可以使用JAVA Script或JScript，通过plug-in的方式还可以使用Perl、TCL等第三方脚本语言。微软还提供了InterDev这样的ASP开发工具。用户在开发的时候可以使用VB/VC开发ActiveX控件，并借助微软的组件技术COM来实现几乎所有的Client/ Server方式下具有的功能。但是它所使用的语种不是完全的面向对象式语言，不利于开发大型网站程序，且运行速度较慢。
PHP是植根于Unix或Linux的一种网站开发技术，由于Unix和Linux用于大型服务器上，寻常百姓很少问津，到近些年Linux开始推广才逐渐被人们所认识。和ASP一样是在服务器进行编程的，不过PHP是GNU标准的自由软件，不仅它是免费的，和其配合使用的Apache Server 、My SQL数据库也是免费的，其源代码也是向外公开的。PHP还具有跨平台性，在 Window98, NT, Linux, Unix和Macintosh等环境下均能运行，而且代码可以重用。由于采用类似C和Perl的语言格式，PHP含有相当丰富的函数库，上载文件、存取数据库中的二进制图片数据、作图、XML解析等功能的实现，只需借助某个或某几个函数即可完成，而不像ASP那样需要引入专门的控件才可实现。PHP也有其不足。相对ASP来说，PHP的自由软件身份使得自身的发展得不到颇具实力的软件开发公司的支持，其发展具有不定性，相应的参考材料、技术支持也较匾乏。它的类似C的语言风格，使它不如ASP来得容易掌握此外，PHP提供的数据库接口函数也不统一，在访问数据库时不如ASP那么方便。    
JSP是由Sun公司推出的非常类似与ASP的一种动态网页技术标准。它也提供了在HTML代码中混合程序代码，由语言引擎进行解释执行的能力。JSP使用的是成熟强大的JAVA语言。客户端请求JSP编写的页面时，代码首先被转换成JAVA源文件，再编译成支持 HTTP, FTP等网络协议的class文件(即Servlet)，并由JAVA虚拟机执行。这种编译操作仅在对JSP页面的第一次请求时发生，虽然首次调用需几秒的编译加载时间，但后续请求只需调用服务器端缓存中的Servlets就可以了，比起每次请求都要解释执行的ASP代码要快。相对于ASP和PHP来说，JSP在跨平台可重用性和安全性上面还是有很多独到之处的。 
3P有一个共同的缺点，就是HTML网页代码和脚本混杂，大大增加了网站开发和维护的难度,另外也由于微软开发一种能JSP相抗衡的新技术，ASP.NET技术的出现基本改变了这些。ASP.NET技术使用完全的面向对象语言，网页与程序分离有利于更好的设计程序，使得代码更简洁、易于编写，不仅提高了重利用性和共享性，还提高了可调度性、可测量性、安全性和可靠性;同时，对不同的浏览器提供了更好的支持。ASP. NET能使开发人员创造出更加动态而且伸缩性更强的应用程序，这种应用程序能够更好地满足公司的商业需求，并提供一个更加丰富的开发环境。在兼容以前设计习惯的基础上采用完全的可视化设计，使windows程序和网站程序的风格区别缩小，使用任何语种都只要遵守.NET规范，都可以使用ASP.NET，使得技术的推广速度相当快。
	
2.1.2 技术比较
ASP和JSP都是使用的脚本语言混合HTML编程，特别是ASP的脚本语言属于弱类型、面向结构的编程语言，而非面向对象，这就明显产生以下几个问题：
1、代码逻辑混乱，难于管理：它使用的是脚本语言混合html编程，所以很难看清代码的逻辑关系，并且随着程序的复杂性增加，使得代码的管理十分困难，甚至超出一个程序员所能达到的管理能力，从而造成出错或这样那样的问题。 
2、代码的可重用性差：由于是面向结构的编程方式，并且混合html，所以可能页面原型修改一点，整个程序都需要修改，更别提代码重用了。 
3、弱类型造成潜在的出错可能：尽管弱数据类型的编程语言使用起来会方便一些，但相对于它所造成的出错几率就远远得不偿失的。 
以上是语言本身的弱点，在功能方面ASP同样存在问题，第一是功能太弱，一些底层操作只能通过组件来完成，在这点上甚至还远远比不上PHP/JSP，在纠错/调试功能的完善，这点上ASP/PHP/JSP差不多。
	下面是ASP和ASP.NET在具体操作编程上有什么不同。在ASP程序中，当需要使用Server对象的Create Object方法来建立一个类实例的时候，首先要声明一个变量fso，之后将变量fso赋予FileSystemObject的对象（FileSystemObject对象可以在Scripting这个库中找到）。如果想要ASP代码得以正常运行，还必须确定相关的DLL文件已经被安装并且注册到服务器。当C#运行库被安装的时候，FileSystemObject对象是会被自动注册的。但是如果想使用第三方开发的组件或者使用自己创建的组件，就需要小心安装并且注册你的组件了。其具体的代码如下：
<Script runat="server" language="VBScript">
Dim fso
Set fso = Server.CreateObject("Scripting.FileSystemObject")
</script>
而在ASP.NET中，在声明一个变量的同时，可以指定它的类型并且初始化这个变量 
为了引用一个类，需要使用这样的表示方法：名称空间[.子名称空间].类。即如：
	<Script runat="server" language="c#">
	Scripting.FileSystemObject fso = new Scripting.FileSystemObject();
	</script>
	在上面的代码中，引用了FileSystemObject这个类，而FileSystemObject这个类可以在名称空间Scripting中找到。上面的名称空间实际上只是假设的一个名称空间，它并不存在于.NET的架构当中，所以上面的代码实际上是无法运行的。
	由此可以看出ASP和ASP.NET技术的区别了。ASP.NET使用的面向对象的语言，而不是一种脚本语言，所以它具有面向对象编程语言的一切特性，比如封装性、继承性、多态性等等，这就解决了刚才谈到的ASP的那些弱点。封装性使得代码逻辑清晰，易于管理，并且应用到ASP.NET上就可以使业务逻辑和Html页面分离，这样无论页面原型如何改变，业务逻辑代码都不必做任何改动；继承性和多态性使得代码的可重用性极大的提高，你可以通过继承已有的对象最大限度保护你以前的投资。并且C#和C++、Java一样提供了完善的调试/纠错体系。
	JSP同样是实现动态网页的一个利器。由于他的脚本语言是JAVA，所以继承了JAVA诸多优点。ASP.NET和JAVA的具体的区别。其重要体现在：
1) 面向对象性: 
ASP.NET将C#作为一种面向对象语言，在很多方面来看，微软将C#成为与Java相似的语言。C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场占有量的话，那么它将给ASP.NET带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。 C# 是ASP.NET开发中一个最重要的功能，这也是.NET框架的一个重要组成部分。
2) 数据库连接： 
 在ASP中的一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器，因此ASP Web数据库应用开发特别简单。ASP.NET发展了更多的功能，因为有了ADO.NET，ADO.NET带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP.NET/ADO.NET出现后这样的差别就更明显。
3) 大型站点应用： 
  ASP.NET将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP.NET可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.NET框架已经充分地提供了这个方法。ASP.NET提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。 
于是ASP.NET现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP.NET还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,需要购买昂贵的应用服务器群来达到同样的目的。
4) ASP.NET还提供更多的其它方面的新特性，例如： 
*内置的对象缓存和页面结果缓存。 
*内置的XML支持，可用于XML数据集的简单处理。 
*服务器控制提供了更充分的交互式控制。 
可以看出，由于JSP模型是在ASP之后，在许多方面借鉴了ASP，如：session、application等对象。同时JSP使用灵活而强大的JAVA语言，而不是低效的脚本语言，使得JSP与ASP相比，具有明显的优势。但是，ASP.NET又是在借鉴JSP的优点后推出的，这样ASP.NET又具有后发的优势。

2.1.3 ASP.NET技术研究
ASP. NET隶属于Microsoft. NET框架，是由.NET框架提供的编程类库所组成的，它提供了Web应用程序模型，并采用面向对象的思想――模块化与组件化的技术而构建。
那说到ASP.NET，就不得不先了解下.NET,其全称为Microsoft .NET。Microsoft .NET平台包括用于创建和操作新一代服务的.NET基础结构和工具；可以启用大量客户机的.NET User Experience；用于建立新一代高度分布式的数以百万计的.NET积木式组件服务；以及用于启用新一代智能互联网设备的.NET设备软件。Microsoft .NET产品和服务-包括Windows.NET，连同建立积木式服务的核心集成套件；MSNTM .NET；个人订购服务；Office.NET；Visual Studio .NET；以及用于.NET的BCentralTM。
1  引言
上个世纪60年代诞生的互联网，在近十几年的时间里得到了迅猛的发展，其主要的原因是WEB技术的出现。它将世界各地的信息链接起来，使互联网成为最大的信息载体，使地球变的像个小村子，使信息共享和流通的能力延伸到了我们的桌面上。WEB技术是互联网的核心内容，WEB因为具有音频、视频技术，内部交互和易于管理而受到个人和企业的青睐。随着WEB的逐渐发展和成熟，web技术也在逐渐的发展，从HTML到CGI，到3P（ASP、JSP、PHP），再到现在的ASP.NET，已经经过了几个阶段的发展。
1.1  问题定义与内容简介
ASP.NET网络服务体系架构为使用ASP.NET建立网络服务提供了一个高级可编程模板。虽然建立网络服务并不需要使用网络服务平台，但是它具有许多的优点将简化开发过程，并且它使用的编程模型对用ASP或VB工作的开发人员来说是很熟悉的。使用这个可编程模型，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。
本课题的主要目的是对网站设计的相关技术进行理论研究，比较ASP.NET技术的相关特点，并在对各种技术进行系统分析和研究的基础上，借鉴现有系统的一些经验，开发一网站实现相关管理功能。并且通过学习ASP.NET技术并查阅大量关于网站设计技术的文献资料，比较各种技术的优越性，汇总形成相关文档。
在研究学习的基础上，结合相关资料，设计出简洁的具有用户注册登录、信息查看、信息查询等功能的系统。网站实现的基本功能是：（1）信息查看：普通用户和管理员登录系统后可以进行信息查看；（2）信息查询：用户可以登录系统后进行信息查询。
1.2  研究背景及研究意义
随着个人电脑和Internet的普及推广，Web技术得到了迅猛的发展，人们开始越来越依赖网络：企业通过网络可以更有效、便捷的发布信息和推广自己新的产品；个人通过网络可以跟自己的朋友聊天、写信，可以查看新闻，可以在网上娱乐，甚至可以不用出户就可以购买自己喜欢的商品等等，网络带来无尽的便捷和乐趣。设计出好看，适用的网站就成为必要的，现在用于网站设计、开发的技术有很多，譬如ASP、JSP、ASP.NET等等。
其中JSP(Java Server Pages)是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。它是在传统的网页HTML文件中插入Java程序段和JSP标记，从而形成JSP文件。JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
ASP(Active Server Pages活动服务器页面)是一种功能强大的运用于服务器端的脚本编程环境，但是只能用VBScript或者JavaScript这样的非模块语言来编程，而且大量的HTML代码和VBScript、JavaScript代码混合在一起，使得程序员需要修改程序的时候比较困难。
而ASP.NET技术是Microsoft公司推出的新一代动态Web开发技术。ASP.NET不同于ASP和JSP，它是建立在.NET Framework之上，提供了更易于编写而且结构清晰的代码，它使用VB.NET和C#等模块化语言编写程序，提高了代码的再利用性和共享性。ASP.NET在结构上几乎完全是基于组件和模块化的，Web应用程序的开发人员使用这个开发技术可以实现更加模块化的、功能更强大的应用程序。ASP.NET技术在效率、可重用性及代码量上较ASP和JSP都有明显的优势。
使用ASP.NET技术，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。开发人员用ASP.NET生成一个扩展名为.asmx的文件，并把此文件配制为网络应用程序的一部分，就建立起了一个网络服务。 asmx文件包含对在其它地方定义的受控类的引用，或者包含这个类的定义。这个类是由ASP.NET提供的WebService类所派生。公有的类方法在标记上WebMethod属性后，就会成为网络服务方法，把HTTP请求发送到asmx文件中的URL后，这些方法就会被调用。你不必手工为你的网络服务建立一个契约。当被调用者请求时，ASP.NET检查类的元数据，以自动生成SCL文件。客户可通过SOAP，HTTP GET 和HTTP POST提交请求。对方法和参数进行编码的约定是：对HTTP GET，将被编码为查询字符串；对HTTP POST，将被编码为表单数据。HTTP GET 和HTTP POST 的机制不如SOAP有力，但是它们使得客户在访问网络服务时不必支持SOAP。
 ASP.NET 网络服务模型假定了一个无状态服务结构。无状态结构通常比有状态结构更具可扩展性。每次收到一个服务请求后，就生成一个新对象，请求被转化为一个方法调用，当该方法调用返回时对象被销毁。如果这些服务需要跨请求维护状态，那么它们将使用ASP.NET状态管理服务。基于ASP.NET的网络服务在网络应用程序模型中运行，因此它们得到了该模型的所有安全、配制和其它优点。
 ASP.NET 网络服务还提供了一个为在SCL文件中描述的网络服务生成分类的受控代理工具。代理生成器把SCL文件中描述的消息映射成受控类中的方法。代理对应用程序代码隐藏了所有的网络和引导设备，因此使用网络服务看起来就像使用其它受控代码一样。代理将优先使用SOAP链接网络服务，但是它同样支持HTTP GET和 HTTP POST机制。因此HTTP GET和 HTTP POST同样也能被使用。
网络服务为在Internet上绑定应用程序提供了一个利用现存体系架构和应用程序的简单的、灵活的、基于许多标准的模型。网络应用程序很容易与当地开发的服务或已存在的服务集成在一起，而不用考虑开发平台、开发语言或使用的对象模型，以用于实现任何组成的服务或应用程序。
Microsoft .NET框架在现有开发人员技巧之上，提供了一个应用程序模板和关键技术，用于简化安全、可靠、可扩展、高可用性的网络服务的建立、部署和不断的发展。
1.3  可行性分析
1.3.1 技术可行性研究
课题主要是理论研究，研究ASP.NET技术在网站开发中的应用，关键是要查阅大量的关于ASP.NET技术和其他网站开发技术方面的文章和书籍。学校图书馆有大量关于这方面的书籍可以借阅，另外在互联网上也有关于这方面的大量论文可以查阅。另外网站的设计主要使用的是ASP.NET技术，.NET Framework1.1框架作为微软公司已经比较成熟的产品，现在越来越多的网站开发设计都选择它。
1.3.2 经济可行性研究 
课题研究的是ASP.NET技术，设计开发的电子商务网站在PC机上就可以实现，不要考虑其他的设备。也为以后网站设计开发编程技术的选择提供了更多的技术支持。
1.4 论文各章内容介绍 
论文共分为六章，由浅至深的阐述了研究的结论并结合实例进行了说明。
第一章简要的介绍了Microsoft .NET框架，提出了课题研究的背景，并对研究课题做了调研及可行性分析。
第二章主要介绍了WEB技术的发展，简单介绍了ASP，JSP 和PHP技术，详细说明了ASP.NET技术，并将各种网站开发技术做了深入比较。
第三章全面介绍了对实例系统进行总体设计的方案。
第四章介绍系统的详细设计和各功能模块的设计及实现
第五章介绍系统的应用演示，分别以用户和管理员的身份进行了演示分析。
第六章介绍研究成果的评价及其不足的解决方案

2  课题研究分析
2.1  网站开发技术研究
2.1.1 WEB开发技术的发展
WEB程序初期，网站组成是一系列静态的网页，这种程序只允许用户浏览网站的信息，而不能和网站进行交互(即静态网页)，这就大大制约了商业的经营活动。为此，CGI技术出现，基本弥补了不能交互的缺点，是技术上的一种突破，但用户在使用CGI程序时，CGI为每个用户分配一个进程，进程是资源分配的基本单位，这样使资源不能得到完全很好的利用，并且浪费严重。由于计算机资源的有限性，限制了使用网站的用户的数量，导致用户使用中速度相对过慢，不能满足需求。与此同时Microsoft公司和网景公司均看到了CGI的不足，为此分别设计的一套API，分别是ISAPI和NSAPI，这两套API均采用线程机制，每个用户均使用一个线程与网站进行交互，他们的出现使得每个语种如DELPHI、VB等均可以设计web应用程序，WEB程序获得飞速的发展。但ISAPI和NSAPI有两个缺点:一是不太稳定，二是要求程序的设计水平较高不利于普及。1995年java出现后给网站设计带来了曙光，java是一个跨平台的程序设计语言，以其一次编译，处处运行的优势，迅速推广。与此同时网站的软件技术出现了ASP、PHP,JAVA也发展出一个分支JSP,我们一般称之为3P。3P的出现大大降低了网站设计的门槛，为网站普及起着不可磨灭的贡献。
3P的技术各有千秋。ASP是嵌入在HTML中的一种服务器端编程的WEB开发技术，即客户端请求网页时ASP文件先在服务器端编译执行，再以HTML格式传送给客户端浏览器显示，因此客户看不见ASP文件，程序的保密性较好。ASP使用的脚本语言是可扩充的，不仅可以使用默认的VBScript语言，也可以使用JAVA Script或JScript，通过plug-in的方式还可以使用Perl、TCL等第三方脚本语言。微软还提供了InterDev这样的ASP开发工具。用户在开发的时候可以使用VB/VC开发ActiveX控件，并借助微软的组件技术COM来实现几乎所有的Client/ Server方式下具有的功能。但是它所使用的语种不是完全的面向对象式语言，不利于开发大型网站程序，且运行速度较慢。
PHP是植根于Unix或Linux的一种网站开发技术，由于Unix和Linux用于大型服务器上，寻常百姓很少问津，到近些年Linux开始推广才逐渐被人们所认识。和ASP一样是在服务器进行编程的，不过PHP是GNU标准的自由软件，不仅它是免费的，和其配合使用的Apache Server 、My SQL数据库也是免费的，其源代码也是向外公开的。PHP还具有跨平台性，在 Window98, NT, Linux, Unix和Macintosh等环境下均能运行，而且代码可以重用。由于采用类似C和Perl的语言格式，PHP含有相当丰富的函数库，上载文件、存取数据库中的二进制图片数据、作图、XML解析等功能的实现，只需借助某个或某几个函数即可完成，而不像ASP那样需要引入专门的控件才可实现。PHP也有其不足。相对ASP来说，PHP的自由软件身份使得自身的发展得不到颇具实力的软件开发公司的支持，其发展具有不定性，相应的参考材料、技术支持也较匾乏。它的类似C的语言风格，使它不如ASP来得容易掌握此外，PHP提供的数据库接口函数也不统一，在访问数据库时不如ASP那么方便。    
JSP是由Sun公司推出的非常类似与ASP的一种动态网页技术标准。它也提供了在HTML代码中混合程序代码，由语言引擎进行解释执行的能力。JSP使用的是成熟强大的JAVA语言。客户端请求JSP编写的页面时，代码首先被转换成JAVA源文件，再编译成支持 HTTP, FTP等网络协议的class文件(即Servlet)，并由JAVA虚拟机执行。这种编译操作仅在对JSP页面的第一次请求时发生，虽然首次调用需几秒的编译加载时间，但后续请求只需调用服务器端缓存中的Servlets就可以了，比起每次请求都要解释执行的ASP代码要快。相对于ASP和PHP来说，JSP在跨平台可重用性和安全性上面还是有很多独到之处的。 
3P有一个共同的缺点，就是HTML网页代码和脚本混杂，大大增加了网站开发和维护的难度,另外也由于微软开发一种能JSP相抗衡的新技术，ASP.NET技术的出现基本改变了这些。ASP.NET技术使用完全的面向对象语言，网页与程序分离有利于更好的设计程序，使得代码更简洁、易于编写，不仅提高了重利用性和共享性，还提高了可调度性、可测量性、安全性和可靠性;同时，对不同的浏览器提供了更好的支持。ASP. NET能使开发人员创造出更加动态而且伸缩性更强的应用程序，这种应用程序能够更好地满足公司的商业需求，并提供一个更加丰富的开发环境。在兼容以前设计习惯的基础上采用完全的可视化设计，使windows程序和网站程序的风格区别缩小，使用任何语种都只要遵守.NET规范，都可以使用ASP.NET，使得技术的推广速度相当快。
	
2.1.2 技术比较
ASP和JSP都是使用的脚本语言混合HTML编程，特别是ASP的脚本语言属于弱类型、面向结构的编程语言，而非面向对象，这就明显产生以下几个问题：
1、代码逻辑混乱，难于管理：它使用的是脚本语言混合html编程，所以很难看清代码的逻辑关系，并且随着程序的复杂性增加，使得代码的管理十分困难，甚至超出一个程序员所能达到的管理能力，从而造成出错或这样那样的问题。 
2、代码的可重用性差：由于是面向结构的编程方式，并且混合html，所以可能页面原型修改一点，整个程序都需要修改，更别提代码重用了。 
3、弱类型造成潜在的出错可能：尽管弱数据类型的编程语言使用起来会方便一些，但相对于它所造成的出错几率就远远得不偿失的。 
以上是语言本身的弱点，在功能方面ASP同样存在问题，第一是功能太弱，一些底层操作只能通过组件来完成，在这点上甚至还远远比不上PHP/JSP，在纠错/调试功能的完善，这点上ASP/PHP/JSP差不多。
	下面是ASP和ASP.NET在具体操作编程上有什么不同。在ASP程序中，当需要使用Server对象的Create Object方法来建立一个类实例的时候，首先要声明一个变量fso，之后将变量fso赋予FileSystemObject的对象（FileSystemObject对象可以在Scripting这个库中找到）。如果想要ASP代码得以正常运行，还必须确定相关的DLL文件已经被安装并且注册到服务器。当C#运行库被安装的时候，FileSystemObject对象是会被自动注册的。但是如果想使用第三方开发的组件或者使用自己创建的组件，就需要小心安装并且注册你的组件了。其具体的代码如下：
<Script runat="server" language="VBScript">
Dim fso
Set fso = Server.CreateObject("Scripting.FileSystemObject")
</script>
而在ASP.NET中，在声明一个变量的同时，可以指定它的类型并且初始化这个变量 
为了引用一个类，需要使用这样的表示方法：名称空间[.子名称空间].类。即如：
	<Script runat="server" language="c#">
	Scripting.FileSystemObject fso = new Scripting.FileSystemObject();
	</script>
	在上面的代码中，引用了FileSystemObject这个类，而FileSystemObject这个类可以在名称空间Scripting中找到。上面的名称空间实际上只是假设的一个名称空间，它并不存在于.NET的架构当中，所以上面的代码实际上是无法运行的。
	由此可以看出ASP和ASP.NET技术的区别了。ASP.NET使用的面向对象的语言，而不是一种脚本语言，所以它具有面向对象编程语言的一切特性，比如封装性、继承性、多态性等等，这就解决了刚才谈到的ASP的那些弱点。封装性使得代码逻辑清晰，易于管理，并且应用到ASP.NET上就可以使业务逻辑和Html页面分离，这样无论页面原型如何改变，业务逻辑代码都不必做任何改动；继承性和多态性使得代码的可重用性极大的提高，你可以通过继承已有的对象最大限度保护你以前的投资。并且C#和C++、Java一样提供了完善的调试/纠错体系。
	JSP同样是实现动态网页的一个利器。由于他的脚本语言是JAVA，所以继承了JAVA诸多优点。ASP.NET和JAVA的具体的区别。其重要体现在：
1) 面向对象性: 
ASP.NET将C#作为一种面向对象语言，在很多方面来看，微软将C#成为与Java相似的语言。C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场占有量的话，那么它将给ASP.NET带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。 C# 是ASP.NET开发中一个最重要的功能，这也是.NET框架的一个重要组成部分。
2) 数据库连接： 
 在ASP中的一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器，因此ASP Web数据库应用开发特别简单。ASP.NET发展了更多的功能，因为有了ADO.NET，ADO.NET带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP.NET/ADO.NET出现后这样的差别就更明显。
3) 大型站点应用： 
  ASP.NET将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP.NET可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.NET框架已经充分地提供了这个方法。ASP.NET提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。 
于是ASP.NET现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP.NET还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,需要购买昂贵的应用服务器群来达到同样的目的。
4) ASP.NET还提供更多的其它方面的新特性，例如： 
*内置的对象缓存和页面结果缓存。 
*内置的XML支持，可用于XML数据集的简单处理。 
*服务器控制提供了更充分的交互式控制。 
可以看出，由于JSP模型是在ASP之后，在许多方面借鉴了ASP，如：session、application等对象。同时JSP使用灵活而强大的JAVA语言，而不是低效的脚本语言，使得JSP与ASP相比，具有明显的优势。但是，ASP.NET又是在借鉴JSP的优点后推出的，这样ASP.NET又具有后发的优势。

2.1.3 ASP.NET技术研究
ASP. NET隶属于Microsoft. NET框架，是由.NET框架提供的编程类库所组成的，它提供了Web应用程序模型，并采用面向对象的思想――模块化与组件化的技术而构建。
那说到ASP.NET，就不得不先了解下.NET,其全称为Microsoft .NET。Microsoft .NET平台包括用于创建和操作新一代服务的.NET基础结构和工具；可以启用大量客户机的.NET User Experience；用于建立新一代高度分布式的数以百万计的.NET积木式组件服务；以及用于启用新一代智能互联网设备的.NET设备软件。Microsoft .NET产品和服务-包括Windows.NET，连同建立积木式服务的核心集成套件；MSNTM .NET；个人订购服务；Office.NET；Visual Studio .NET；以及用于.NET的BCentralTM。
1  引言
上个世纪60年代诞生的互联网，在近十几年的时间里得到了迅猛的发展，其主要的原因是WEB技术的出现。它将世界各地的信息链接起来，使互联网成为最大的信息载体，使地球变的像个小村子，使信息共享和流通的能力延伸到了我们的桌面上。WEB技术是互联网的核心内容，WEB因为具有音频、视频技术，内部交互和易于管理而受到个人和企业的青睐。随着WEB的逐渐发展和成熟，web技术也在逐渐的发展，从HTML到CGI，到3P（ASP、JSP、PHP），再到现在的ASP.NET，已经经过了几个阶段的发展。
1.1  问题定义与内容简介
ASP.NET网络服务体系架构为使用ASP.NET建立网络服务提供了一个高级可编程模板。虽然建立网络服务并不需要使用网络服务平台，但是它具有许多的优点将简化开发过程，并且它使用的编程模型对用ASP或VB工作的开发人员来说是很熟悉的。使用这个可编程模型，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。
本课题的主要目的是对网站设计的相关技术进行理论研究，比较ASP.NET技术的相关特点，并在对各种技术进行系统分析和研究的基础上，借鉴现有系统的一些经验，开发一网站实现相关管理功能。并且通过学习ASP.NET技术并查阅大量关于网站设计技术的文献资料，比较各种技术的优越性，汇总形成相关文档。
在研究学习的基础上，结合相关资料，设计出简洁的具有用户注册登录、信息查看、信息查询等功能的系统。网站实现的基本功能是：（1）信息查看：普通用户和管理员登录系统后可以进行信息查看；（2）信息查询：用户可以登录系统后进行信息查询。
1.2  研究背景及研究意义
随着个人电脑和Internet的普及推广，Web技术得到了迅猛的发展，人们开始越来越依赖网络：企业通过网络可以更有效、便捷的发布信息和推广自己新的产品；个人通过网络可以跟自己的朋友聊天、写信，可以查看新闻，可以在网上娱乐，甚至可以不用出户就可以购买自己喜欢的商品等等，网络带来无尽的便捷和乐趣。设计出好看，适用的网站就成为必要的，现在用于网站设计、开发的技术有很多，譬如ASP、JSP、ASP.NET等等。
其中JSP(Java Server Pages)是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。它是在传统的网页HTML文件中插入Java程序段和JSP标记，从而形成JSP文件。JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
ASP(Active Server Pages活动服务器页面)是一种功能强大的运用于服务器端的脚本编程环境，但是只能用VBScript或者JavaScript这样的非模块语言来编程，而且大量的HTML代码和VBScript、JavaScript代码混合在一起，使得程序员需要修改程序的时候比较困难。
而ASP.NET技术是Microsoft公司推出的新一代动态Web开发技术。ASP.NET不同于ASP和JSP，它是建立在.NET Framework之上，提供了更易于编写而且结构清晰的代码，它使用VB.NET和C#等模块化语言编写程序，提高了代码的再利用性和共享性。ASP.NET在结构上几乎完全是基于组件和模块化的，Web应用程序的开发人员使用这个开发技术可以实现更加模块化的、功能更强大的应用程序。ASP.NET技术在效率、可重用性及代码量上较ASP和JSP都有明显的优势。
使用ASP.NET技术，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。开发人员用ASP.NET生成一个扩展名为.asmx的文件，并把此文件配制为网络应用程序的一部分，就建立起了一个网络服务。 asmx文件包含对在其它地方定义的受控类的引用，或者包含这个类的定义。这个类是由ASP.NET提供的WebService类所派生。公有的类方法在标记上WebMethod属性后，就会成为网络服务方法，把HTTP请求发送到asmx文件中的URL后，这些方法就会被调用。你不必手工为你的网络服务建立一个契约。当被调用者请求时，ASP.NET检查类的元数据，以自动生成SCL文件。客户可通过SOAP，HTTP GET 和HTTP POST提交请求。对方法和参数进行编码的约定是：对HTTP GET，将被编码为查询字符串；对HTTP POST，将被编码为表单数据。HTTP GET 和HTTP POST 的机制不如SOAP有力，但是它们使得客户在访问网络服务时不必支持SOAP。
 ASP.NET 网络服务模型假定了一个无状态服务结构。无状态结构通常比有状态结构更具可扩展性。每次收到一个服务请求后，就生成一个新对象，请求被转化为一个方法调用，当该方法调用返回时对象被销毁。如果这些服务需要跨请求维护状态，那么它们将使用ASP.NET状态管理服务。基于ASP.NET的网络服务在网络应用程序模型中运行，因此它们得到了该模型的所有安全、配制和其它优点。
 ASP.NET 网络服务还提供了一个为在SCL文件中描述的网络服务生成分类的受控代理工具。代理生成器把SCL文件中描述的消息映射成受控类中的方法。代理对应用程序代码隐藏了所有的网络和引导设备，因此使用网络服务看起来就像使用其它受控代码一样。代理将优先使用SOAP链接网络服务，但是它同样支持HTTP GET和 HTTP POST机制。因此HTTP GET和 HTTP POST同样也能被使用。
网络服务为在Internet上绑定应用程序提供了一个利用现存体系架构和应用程序的简单的、灵活的、基于许多标准的模型。网络应用程序很容易与当地开发的服务或已存在的服务集成在一起，而不用考虑开发平台、开发语言或使用的对象模型，以用于实现任何组成的服务或应用程序。
Microsoft .NET框架在现有开发人员技巧之上，提供了一个应用程序模板和关键技术，用于简化安全、可靠、可扩展、高可用性的网络服务的建立、部署和不断的发展。
1.3  可行性分析
1.3.1 技术可行性研究
课题主要是理论研究，研究ASP.NET技术在网站开发中的应用，关键是要查阅大量的关于ASP.NET技术和其他网站开发技术方面的文章和书籍。学校图书馆有大量关于这方面的书籍可以借阅，另外在互联网上也有关于这方面的大量论文可以查阅。另外网站的设计主要使用的是ASP.NET技术，.NET Framework1.1框架作为微软公司已经比较成熟的产品，现在越来越多的网站开发设计都选择它。
1.3.2 经济可行性研究 
课题研究的是ASP.NET技术，设计开发的电子商务网站在PC机上就可以实现，不要考虑其他的设备。也为以后网站设计开发编程技术的选择提供了更多的技术支持。
1.4 论文各章内容介绍 
论文共分为六章，由浅至深的阐述了研究的结论并结合实例进行了说明。
第一章简要的介绍了Microsoft .NET框架，提出了课题研究的背景，并对研究课题做了调研及可行性分析。
第二章主要介绍了WEB技术的发展，简单介绍了ASP，JSP 和PHP技术，详细说明了ASP.NET技术，并将各种网站开发技术做了深入比较。
第三章全面介绍了对实例系统进行总体设计的方案。
第四章介绍系统的详细设计和各功能模块的设计及实现
第五章介绍系统的应用演示，分别以用户和管理员的身份进行了演示分析。
第六章介绍研究成果的评价及其不足的解决方案

2  课题研究分析
2.1  网站开发技术研究
2.1.1 WEB开发技术的发展
WEB程序初期，网站组成是一系列静态的网页，这种程序只允许用户浏览网站的信息，而不能和网站进行交互(即静态网页)，这就大大制约了商业的经营活动。为此，CGI技术出现，基本弥补了不能交互的缺点，是技术上的一种突破，但用户在使用CGI程序时，CGI为每个用户分配一个进程，进程是资源分配的基本单位，这样使资源不能得到完全很好的利用，并且浪费严重。由于计算机资源的有限性，限制了使用网站的用户的数量，导致用户使用中速度相对过慢，不能满足需求。与此同时Microsoft公司和网景公司均看到了CGI的不足，为此分别设计的一套API，分别是ISAPI和NSAPI，这两套API均采用线程机制，每个用户均使用一个线程与网站进行交互，他们的出现使得每个语种如DELPHI、VB等均可以设计web应用程序，WEB程序获得飞速的发展。但ISAPI和NSAPI有两个缺点:一是不太稳定，二是要求程序的设计水平较高不利于普及。1995年java出现后给网站设计带来了曙光，java是一个跨平台的程序设计语言，以其一次编译，处处运行的优势，迅速推广。与此同时网站的软件技术出现了ASP、PHP,JAVA也发展出一个分支JSP,我们一般称之为3P。3P的出现大大降低了网站设计的门槛，为网站普及起着不可磨灭的贡献。
3P的技术各有千秋。ASP是嵌入在HTML中的一种服务器端编程的WEB开发技术，即客户端请求网页时ASP文件先在服务器端编译执行，再以HTML格式传送给客户端浏览器显示，因此客户看不见ASP文件，程序的保密性较好。ASP使用的脚本语言是可扩充的，不仅可以使用默认的VBScript语言，也可以使用JAVA Script或JScript，通过plug-in的方式还可以使用Perl、TCL等第三方脚本语言。微软还提供了InterDev这样的ASP开发工具。用户在开发的时候可以使用VB/VC开发ActiveX控件，并借助微软的组件技术COM来实现几乎所有的Client/ Server方式下具有的功能。但是它所使用的语种不是完全的面向对象式语言，不利于开发大型网站程序，且运行速度较慢。
PHP是植根于Unix或Linux的一种网站开发技术，由于Unix和Linux用于大型服务器上，寻常百姓很少问津，到近些年Linux开始推广才逐渐被人们所认识。和ASP一样是在服务器进行编程的，不过PHP是GNU标准的自由软件，不仅它是免费的，和其配合使用的Apache Server 、My SQL数据库也是免费的，其源代码也是向外公开的。PHP还具有跨平台性，在 Window98, NT, Linux, Unix和Macintosh等环境下均能运行，而且代码可以重用。由于采用类似C和Perl的语言格式，PHP含有相当丰富的函数库，上载文件、存取数据库中的二进制图片数据、作图、XML解析等功能的实现，只需借助某个或某几个函数即可完成，而不像ASP那样需要引入专门的控件才可实现。PHP也有其不足。相对ASP来说，PHP的自由软件身份使得自身的发展得不到颇具实力的软件开发公司的支持，其发展具有不定性，相应的参考材料、技术支持也较匾乏。它的类似C的语言风格，使它不如ASP来得容易掌握此外，PHP提供的数据库接口函数也不统一，在访问数据库时不如ASP那么方便。    
JSP是由Sun公司推出的非常类似与ASP的一种动态网页技术标准。它也提供了在HTML代码中混合程序代码，由语言引擎进行解释执行的能力。JSP使用的是成熟强大的JAVA语言。客户端请求JSP编写的页面时，代码首先被转换成JAVA源文件，再编译成支持 HTTP, FTP等网络协议的class文件(即Servlet)，并由JAVA虚拟机执行。这种编译操作仅在对JSP页面的第一次请求时发生，虽然首次调用需几秒的编译加载时间，但后续请求只需调用服务器端缓存中的Servlets就可以了，比起每次请求都要解释执行的ASP代码要快。相对于ASP和PHP来说，JSP在跨平台可重用性和安全性上面还是有很多独到之处的。 
3P有一个共同的缺点，就是HTML网页代码和脚本混杂，大大增加了网站开发和维护的难度,另外也由于微软开发一种能JSP相抗衡的新技术，ASP.NET技术的出现基本改变了这些。ASP.NET技术使用完全的面向对象语言，网页与程序分离有利于更好的设计程序，使得代码更简洁、易于编写，不仅提高了重利用性和共享性，还提高了可调度性、可测量性、安全性和可靠性;同时，对不同的浏览器提供了更好的支持。ASP. NET能使开发人员创造出更加动态而且伸缩性更强的应用程序，这种应用程序能够更好地满足公司的商业需求，并提供一个更加丰富的开发环境。在兼容以前设计习惯的基础上采用完全的可视化设计，使windows程序和网站程序的风格区别缩小，使用任何语种都只要遵守.NET规范，都可以使用ASP.NET，使得技术的推广速度相当快。
	
2.1.2 技术比较
ASP和JSP都是使用的脚本语言混合HTML编程，特别是ASP的脚本语言属于弱类型、面向结构的编程语言，而非面向对象，这就明显产生以下几个问题：
1、代码逻辑混乱，难于管理：它使用的是脚本语言混合html编程，所以很难看清代码的逻辑关系，并且随着程序的复杂性增加，使得代码的管理十分困难，甚至超出一个程序员所能达到的管理能力，从而造成出错或这样那样的问题。 
2、代码的可重用性差：由于是面向结构的编程方式，并且混合html，所以可能页面原型修改一点，整个程序都需要修改，更别提代码重用了。 
3、弱类型造成潜在的出错可能：尽管弱数据类型的编程语言使用起来会方便一些，但相对于它所造成的出错几率就远远得不偿失的。 
以上是语言本身的弱点，在功能方面ASP同样存在问题，第一是功能太弱，一些底层操作只能通过组件来完成，在这点上甚至还远远比不上PHP/JSP，在纠错/调试功能的完善，这点上ASP/PHP/JSP差不多。
	下面是ASP和ASP.NET在具体操作编程上有什么不同。在ASP程序中，当需要使用Server对象的Create Object方法来建立一个类实例的时候，首先要声明一个变量fso，之后将变量fso赋予FileSystemObject的对象（FileSystemObject对象可以在Scripting这个库中找到）。如果想要ASP代码得以正常运行，还必须确定相关的DLL文件已经被安装并且注册到服务器。当C#运行库被安装的时候，FileSystemObject对象是会被自动注册的。但是如果想使用第三方开发的组件或者使用自己创建的组件，就需要小心安装并且注册你的组件了。其具体的代码如下：
<Script runat="server" language="VBScript">
Dim fso
Set fso = Server.CreateObject("Scripting.FileSystemObject")
</script>
而在ASP.NET中，在声明一个变量的同时，可以指定它的类型并且初始化这个变量 
为了引用一个类，需要使用这样的表示方法：名称空间[.子名称空间].类。即如：
	<Script runat="server" language="c#">
	Scripting.FileSystemObject fso = new Scripting.FileSystemObject();
	</script>
	在上面的代码中，引用了FileSystemObject这个类，而FileSystemObject这个类可以在名称空间Scripting中找到。上面的名称空间实际上只是假设的一个名称空间，它并不存在于.NET的架构当中，所以上面的代码实际上是无法运行的。
	由此可以看出ASP和ASP.NET技术的区别了。ASP.NET使用的面向对象的语言，而不是一种脚本语言，所以它具有面向对象编程语言的一切特性，比如封装性、继承性、多态性等等，这就解决了刚才谈到的ASP的那些弱点。封装性使得代码逻辑清晰，易于管理，并且应用到ASP.NET上就可以使业务逻辑和Html页面分离，这样无论页面原型如何改变，业务逻辑代码都不必做任何改动；继承性和多态性使得代码的可重用性极大的提高，你可以通过继承已有的对象最大限度保护你以前的投资。并且C#和C++、Java一样提供了完善的调试/纠错体系。
	JSP同样是实现动态网页的一个利器。由于他的脚本语言是JAVA，所以继承了JAVA诸多优点。ASP.NET和JAVA的具体的区别。其重要体现在：
1) 面向对象性: 
ASP.NET将C#作为一种面向对象语言，在很多方面来看，微软将C#成为与Java相似的语言。C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场占有量的话，那么它将给ASP.NET带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。 C# 是ASP.NET开发中一个最重要的功能，这也是.NET框架的一个重要组成部分。
2) 数据库连接： 
 在ASP中的一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器，因此ASP Web数据库应用开发特别简单。ASP.NET发展了更多的功能，因为有了ADO.NET，ADO.NET带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP.NET/ADO.NET出现后这样的差别就更明显。
3) 大型站点应用： 
  ASP.NET将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP.NET可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.NET框架已经充分地提供了这个方法。ASP.NET提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。 
于是ASP.NET现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP.NET还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,需要购买昂贵的应用服务器群来达到同样的目的。
4) ASP.NET还提供更多的其它方面的新特性，例如： 
*内置的对象缓存和页面结果缓存。 
*内置的XML支持，可用于XML数据集的简单处理。 
*服务器控制提供了更充分的交互式控制。 
可以看出，由于JSP模型是在ASP之后，在许多方面借鉴了ASP，如：session、application等对象。同时JSP使用灵活而强大的JAVA语言，而不是低效的脚本语言，使得JSP与ASP相比，具有明显的优势。但是，ASP.NET又是在借鉴JSP的优点后推出的，这样ASP.NET又具有后发的优势。

2.1.3 ASP.NET技术研究
ASP. NET隶属于Microsoft. NET框架，是由.NET框架提供的编程类库所组成的，它提供了Web应用程序模型，并采用面向对象的思想――模块化与组件化的技术而构建。
那说到ASP.NET，就不得不先了解下.NET,其全称为Microsoft .NET。Microsoft .NET平台包括用于创建和操作新一代服务的.NET基础结构和工具；可以启用大量客户机的.NET User Experience；用于建立新一代高度分布式的数以百万计的.NET积木式组件服务；以及用于启用新一代智能互联网设备的.NET设备软件。Microsoft .NET产品和服务-包括Windows.NET，连同建立积木式服务的核心集成套件；MSNTM .NET；个人订购服务；Office.NET；Visual Studio .NET；以及用于.NET的BCentralTM。
1  引言
上个世纪60年代诞生的互联网，在近十几年的时间里得到了迅猛的发展，其主要的原因是WEB技术的出现。它将世界各地的信息链接起来，使互联网成为最大的信息载体，使地球变的像个小村子，使信息共享和流通的能力延伸到了我们的桌面上。WEB技术是互联网的核心内容，WEB因为具有音频、视频技术，内部交互和易于管理而受到个人和企业的青睐。随着WEB的逐渐发展和成熟，web技术也在逐渐的发展，从HTML到CGI，到3P（ASP、JSP、PHP），再到现在的ASP.NET，已经经过了几个阶段的发展。
1.1  问题定义与内容简介
ASP.NET网络服务体系架构为使用ASP.NET建立网络服务提供了一个高级可编程模板。虽然建立网络服务并不需要使用网络服务平台，但是它具有许多的优点将简化开发过程，并且它使用的编程模型对用ASP或VB工作的开发人员来说是很熟悉的。使用这个可编程模型，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。
本课题的主要目的是对网站设计的相关技术进行理论研究，比较ASP.NET技术的相关特点，并在对各种技术进行系统分析和研究的基础上，借鉴现有系统的一些经验，开发一网站实现相关管理功能。并且通过学习ASP.NET技术并查阅大量关于网站设计技术的文献资料，比较各种技术的优越性，汇总形成相关文档。
在研究学习的基础上，结合相关资料，设计出简洁的具有用户注册登录、信息查看、信息查询等功能的系统。网站实现的基本功能是：（1）信息查看：普通用户和管理员登录系统后可以进行信息查看；（2）信息查询：用户可以登录系统后进行信息查询。
1.2  研究背景及研究意义
随着个人电脑和Internet的普及推广，Web技术得到了迅猛的发展，人们开始越来越依赖网络：企业通过网络可以更有效、便捷的发布信息和推广自己新的产品；个人通过网络可以跟自己的朋友聊天、写信，可以查看新闻，可以在网上娱乐，甚至可以不用出户就可以购买自己喜欢的商品等等，网络带来无尽的便捷和乐趣。设计出好看，适用的网站就成为必要的，现在用于网站设计、开发的技术有很多，譬如ASP、JSP、ASP.NET等等。
其中JSP(Java Server Pages)是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。它是在传统的网页HTML文件中插入Java程序段和JSP标记，从而形成JSP文件。JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
ASP(Active Server Pages活动服务器页面)是一种功能强大的运用于服务器端的脚本编程环境，但是只能用VBScript或者JavaScript这样的非模块语言来编程，而且大量的HTML代码和VBScript、JavaScript代码混合在一起，使得程序员需要修改程序的时候比较困难。
而ASP.NET技术是Microsoft公司推出的新一代动态Web开发技术。ASP.NET不同于ASP和JSP，它是建立在.NET Framework之上，提供了更易于编写而且结构清晰的代码，它使用VB.NET和C#等模块化语言编写程序，提高了代码的再利用性和共享性。ASP.NET在结构上几乎完全是基于组件和模块化的，Web应用程序的开发人员使用这个开发技术可以实现更加模块化的、功能更强大的应用程序。ASP.NET技术在效率、可重用性及代码量上较ASP和JSP都有明显的优势。
使用ASP.NET技术，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。开发人员用ASP.NET生成一个扩展名为.asmx的文件，并把此文件配制为网络应用程序的一部分，就建立起了一个网络服务。 asmx文件包含对在其它地方定义的受控类的引用，或者包含这个类的定义。这个类是由ASP.NET提供的WebService类所派生。公有的类方法在标记上WebMethod属性后，就会成为网络服务方法，把HTTP请求发送到asmx文件中的URL后，这些方法就会被调用。你不必手工为你的网络服务建立一个契约。当被调用者请求时，ASP.NET检查类的元数据，以自动生成SCL文件。客户可通过SOAP，HTTP GET 和HTTP POST提交请求。对方法和参数进行编码的约定是：对HTTP GET，将被编码为查询字符串；对HTTP POST，将被编码为表单数据。HTTP GET 和HTTP POST 的机制不如SOAP有力，但是它们使得客户在访问网络服务时不必支持SOAP。
 ASP.NET 网络服务模型假定了一个无状态服务结构。无状态结构通常比有状态结构更具可扩展性。每次收到一个服务请求后，就生成一个新对象，请求被转化为一个方法调用，当该方法调用返回时对象被销毁。如果这些服务需要跨请求维护状态，那么它们将使用ASP.NET状态管理服务。基于ASP.NET的网络服务在网络应用程序模型中运行，因此它们得到了该模型的所有安全、配制和其它优点。
 ASP.NET 网络服务还提供了一个为在SCL文件中描述的网络服务生成分类的受控代理工具。代理生成器把SCL文件中描述的消息映射成受控类中的方法。代理对应用程序代码隐藏了所有的网络和引导设备，因此使用网络服务看起来就像使用其它受控代码一样。代理将优先使用SOAP链接网络服务，但是它同样支持HTTP GET和 HTTP POST机制。因此HTTP GET和 HTTP POST同样也能被使用。
网络服务为在Internet上绑定应用程序提供了一个利用现存体系架构和应用程序的简单的、灵活的、基于许多标准的模型。网络应用程序很容易与当地开发的服务或已存在的服务集成在一起，而不用考虑开发平台、开发语言或使用的对象模型，以用于实现任何组成的服务或应用程序。
Microsoft .NET框架在现有开发人员技巧之上，提供了一个应用程序模板和关键技术，用于简化安全、可靠、可扩展、高可用性的网络服务的建立、部署和不断的发展。
1.3  可行性分析
1.3.1 技术可行性研究
课题主要是理论研究，研究ASP.NET技术在网站开发中的应用，关键是要查阅大量的关于ASP.NET技术和其他网站开发技术方面的文章和书籍。学校图书馆有大量关于这方面的书籍可以借阅，另外在互联网上也有关于这方面的大量论文可以查阅。另外网站的设计主要使用的是ASP.NET技术，.NET Framework1.1框架作为微软公司已经比较成熟的产品，现在越来越多的网站开发设计都选择它。
1.3.2 经济可行性研究 
课题研究的是ASP.NET技术，设计开发的电子商务网站在PC机上就可以实现，不要考虑其他的设备。也为以后网站设计开发编程技术的选择提供了更多的技术支持。
1.4 论文各章内容介绍 
论文共分为六章，由浅至深的阐述了研究的结论并结合实例进行了说明。
第一章简要的介绍了Microsoft .NET框架，提出了课题研究的背景，并对研究课题做了调研及可行性分析。
第二章主要介绍了WEB技术的发展，简单介绍了ASP，JSP 和PHP技术，详细说明了ASP.NET技术，并将各种网站开发技术做了深入比较。
第三章全面介绍了对实例系统进行总体设计的方案。
第四章介绍系统的详细设计和各功能模块的设计及实现
第五章介绍系统的应用演示，分别以用户和管理员的身份进行了演示分析。
第六章介绍研究成果的评价及其不足的解决方案

2  课题研究分析
2.1  网站开发技术研究
2.1.1 WEB开发技术的发展
WEB程序初期，网站组成是一系列静态的网页，这种程序只允许用户浏览网站的信息，而不能和网站进行交互(即静态网页)，这就大大制约了商业的经营活动。为此，CGI技术出现，基本弥补了不能交互的缺点，是技术上的一种突破，但用户在使用CGI程序时，CGI为每个用户分配一个进程，进程是资源分配的基本单位，这样使资源不能得到完全很好的利用，并且浪费严重。由于计算机资源的有限性，限制了使用网站的用户的数量，导致用户使用中速度相对过慢，不能满足需求。与此同时Microsoft公司和网景公司均看到了CGI的不足，为此分别设计的一套API，分别是ISAPI和NSAPI，这两套API均采用线程机制，每个用户均使用一个线程与网站进行交互，他们的出现使得每个语种如DELPHI、VB等均可以设计web应用程序，WEB程序获得飞速的发展。但ISAPI和NSAPI有两个缺点:一是不太稳定，二是要求程序的设计水平较高不利于普及。1995年java出现后给网站设计带来了曙光，java是一个跨平台的程序设计语言，以其一次编译，处处运行的优势，迅速推广。与此同时网站的软件技术出现了ASP、PHP,JAVA也发展出一个分支JSP,我们一般称之为3P。3P的出现大大降低了网站设计的门槛，为网站普及起着不可磨灭的贡献。
3P的技术各有千秋。ASP是嵌入在HTML中的一种服务器端编程的WEB开发技术，即客户端请求网页时ASP文件先在服务器端编译执行，再以HTML格式传送给客户端浏览器显示，因此客户看不见ASP文件，程序的保密性较好。ASP使用的脚本语言是可扩充的，不仅可以使用默认的VBScript语言，也可以使用JAVA Script或JScript，通过plug-in的方式还可以使用Perl、TCL等第三方脚本语言。微软还提供了InterDev这样的ASP开发工具。用户在开发的时候可以使用VB/VC开发ActiveX控件，并借助微软的组件技术COM来实现几乎所有的Client/ Server方式下具有的功能。但是它所使用的语种不是完全的面向对象式语言，不利于开发大型网站程序，且运行速度较慢。
PHP是植根于Unix或Linux的一种网站开发技术，由于Unix和Linux用于大型服务器上，寻常百姓很少问津，到近些年Linux开始推广才逐渐被人们所认识。和ASP一样是在服务器进行编程的，不过PHP是GNU标准的自由软件，不仅它是免费的，和其配合使用的Apache Server 、My SQL数据库也是免费的，其源代码也是向外公开的。PHP还具有跨平台性，在 Window98, NT, Linux, Unix和Macintosh等环境下均能运行，而且代码可以重用。由于采用类似C和Perl的语言格式，PHP含有相当丰富的函数库，上载文件、存取数据库中的二进制图片数据、作图、XML解析等功能的实现，只需借助某个或某几个函数即可完成，而不像ASP那样需要引入专门的控件才可实现。PHP也有其不足。相对ASP来说，PHP的自由软件身份使得自身的发展得不到颇具实力的软件开发公司的支持，其发展具有不定性，相应的参考材料、技术支持也较匾乏。它的类似C的语言风格，使它不如ASP来得容易掌握此外，PHP提供的数据库接口函数也不统一，在访问数据库时不如ASP那么方便。    
JSP是由Sun公司推出的非常类似与ASP的一种动态网页技术标准。它也提供了在HTML代码中混合程序代码，由语言引擎进行解释执行的能力。JSP使用的是成熟强大的JAVA语言。客户端请求JSP编写的页面时，代码首先被转换成JAVA源文件，再编译成支持 HTTP, FTP等网络协议的class文件(即Servlet)，并由JAVA虚拟机执行。这种编译操作仅在对JSP页面的第一次请求时发生，虽然首次调用需几秒的编译加载时间，但后续请求只需调用服务器端缓存中的Servlets就可以了，比起每次请求都要解释执行的ASP代码要快。相对于ASP和PHP来说，JSP在跨平台可重用性和安全性上面还是有很多独到之处的。 
3P有一个共同的缺点，就是HTML网页代码和脚本混杂，大大增加了网站开发和维护的难度,另外也由于微软开发一种能JSP相抗衡的新技术，ASP.NET技术的出现基本改变了这些。ASP.NET技术使用完全的面向对象语言，网页与程序分离有利于更好的设计程序，使得代码更简洁、易于编写，不仅提高了重利用性和共享性，还提高了可调度性、可测量性、安全性和可靠性;同时，对不同的浏览器提供了更好的支持。ASP. NET能使开发人员创造出更加动态而且伸缩性更强的应用程序，这种应用程序能够更好地满足公司的商业需求，并提供一个更加丰富的开发环境。在兼容以前设计习惯的基础上采用完全的可视化设计，使windows程序和网站程序的风格区别缩小，使用任何语种都只要遵守.NET规范，都可以使用ASP.NET，使得技术的推广速度相当快。
	
2.1.2 技术比较
ASP和JSP都是使用的脚本语言混合HTML编程，特别是ASP的脚本语言属于弱类型、面向结构的编程语言，而非面向对象，这就明显产生以下几个问题：
1、代码逻辑混乱，难于管理：它使用的是脚本语言混合html编程，所以很难看清代码的逻辑关系，并且随着程序的复杂性增加，使得代码的管理十分困难，甚至超出一个程序员所能达到的管理能力，从而造成出错或这样那样的问题。 
2、代码的可重用性差：由于是面向结构的编程方式，并且混合html，所以可能页面原型修改一点，整个程序都需要修改，更别提代码重用了。 
3、弱类型造成潜在的出错可能：尽管弱数据类型的编程语言使用起来会方便一些，但相对于它所造成的出错几率就远远得不偿失的。 
以上是语言本身的弱点，在功能方面ASP同样存在问题，第一是功能太弱，一些底层操作只能通过组件来完成，在这点上甚至还远远比不上PHP/JSP，在纠错/调试功能的完善，这点上ASP/PHP/JSP差不多。
	下面是ASP和ASP.NET在具体操作编程上有什么不同。在ASP程序中，当需要使用Server对象的Create Object方法来建立一个类实例的时候，首先要声明一个变量fso，之后将变量fso赋予FileSystemObject的对象（FileSystemObject对象可以在Scripting这个库中找到）。如果想要ASP代码得以正常运行，还必须确定相关的DLL文件已经被安装并且注册到服务器。当C#运行库被安装的时候，FileSystemObject对象是会被自动注册的。但是如果想使用第三方开发的组件或者使用自己创建的组件，就需要小心安装并且注册你的组件了。其具体的代码如下：
<Script runat="server" language="VBScript">
Dim fso
Set fso = Server.CreateObject("Scripting.FileSystemObject")
</script>
而在ASP.NET中，在声明一个变量的同时，可以指定它的类型并且初始化这个变量 
为了引用一个类，需要使用这样的表示方法：名称空间[.子名称空间].类。即如：
	<Script runat="server" language="c#">
	Scripting.FileSystemObject fso = new Scripting.FileSystemObject();
	</script>
	在上面的代码中，引用了FileSystemObject这个类，而FileSystemObject这个类可以在名称空间Scripting中找到。上面的名称空间实际上只是假设的一个名称空间，它并不存在于.NET的架构当中，所以上面的代码实际上是无法运行的。
	由此可以看出ASP和ASP.NET技术的区别了。ASP.NET使用的面向对象的语言，而不是一种脚本语言，所以它具有面向对象编程语言的一切特性，比如封装性、继承性、多态性等等，这就解决了刚才谈到的ASP的那些弱点。封装性使得代码逻辑清晰，易于管理，并且应用到ASP.NET上就可以使业务逻辑和Html页面分离，这样无论页面原型如何改变，业务逻辑代码都不必做任何改动；继承性和多态性使得代码的可重用性极大的提高，你可以通过继承已有的对象最大限度保护你以前的投资。并且C#和C++、Java一样提供了完善的调试/纠错体系。
	JSP同样是实现动态网页的一个利器。由于他的脚本语言是JAVA，所以继承了JAVA诸多优点。ASP.NET和JAVA的具体的区别。其重要体现在：
1) 面向对象性: 
ASP.NET将C#作为一种面向对象语言，在很多方面来看，微软将C#成为与Java相似的语言。C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场占有量的话，那么它将给ASP.NET带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。 C# 是ASP.NET开发中一个最重要的功能，这也是.NET框架的一个重要组成部分。
2) 数据库连接： 
 在ASP中的一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器，因此ASP Web数据库应用开发特别简单。ASP.NET发展了更多的功能，因为有了ADO.NET，ADO.NET带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP.NET/ADO.NET出现后这样的差别就更明显。
3) 大型站点应用： 
  ASP.NET将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP.NET可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.NET框架已经充分地提供了这个方法。ASP.NET提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。 
于是ASP.NET现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP.NET还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,需要购买昂贵的应用服务器群来达到同样的目的。
4) ASP.NET还提供更多的其它方面的新特性，例如： 
*内置的对象缓存和页面结果缓存。 
*内置的XML支持，可用于XML数据集的简单处理。 
*服务器控制提供了更充分的交互式控制。 
可以看出，由于JSP模型是在ASP之后，在许多方面借鉴了ASP，如：session、application等对象。同时JSP使用灵活而强大的JAVA语言，而不是低效的脚本语言，使得JSP与ASP相比，具有明显的优势。但是，ASP.NET又是在借鉴JSP的优点后推出的，这样ASP.NET又具有后发的优势。

2.1.3 ASP.NET技术研究
ASP. NET隶属于Microsoft. NET框架，是由.NET框架提供的编程类库所组成的，它提供了Web应用程序模型，并采用面向对象的思想――模块化与组件化的技术而构建。
那说到ASP.NET，就不得不先了解下.NET,其全称为Microsoft .NET。Microsoft .NET平台包括用于创建和操作新一代服务的.NET基础结构和工具；可以启用大量客户机的.NET User Experience；用于建立新一代高度分布式的数以百万计的.NET积木式组件服务；以及用于启用新一代智能互联网设备的.NET设备软件。Microsoft .NET产品和服务-包括Windows.NET，连同建立积木式服务的核心集成套件；MSNTM .NET；个人订购服务；Office.NET；Visual Studio .NET；以及用于.NET的BCentralTM。
1  引言
上个世纪60年代诞生的互联网，在近十几年的时间里得到了迅猛的发展，其主要的原因是WEB技术的出现。它将世界各地的信息链接起来，使互联网成为最大的信息载体，使地球变的像个小村子，使信息共享和流通的能力延伸到了我们的桌面上。WEB技术是互联网的核心内容，WEB因为具有音频、视频技术，内部交互和易于管理而受到个人和企业的青睐。随着WEB的逐渐发展和成熟，web技术也在逐渐的发展，从HTML到CGI，到3P（ASP、JSP、PHP），再到现在的ASP.NET，已经经过了几个阶段的发展。
1.1  问题定义与内容简介
ASP.NET网络服务体系架构为使用ASP.NET建立网络服务提供了一个高级可编程模板。虽然建立网络服务并不需要使用网络服务平台，但是它具有许多的优点将简化开发过程，并且它使用的编程模型对用ASP或VB工作的开发人员来说是很熟悉的。使用这个可编程模型，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。
本课题的主要目的是对网站设计的相关技术进行理论研究，比较ASP.NET技术的相关特点，并在对各种技术进行系统分析和研究的基础上，借鉴现有系统的一些经验，开发一网站实现相关管理功能。并且通过学习ASP.NET技术并查阅大量关于网站设计技术的文献资料，比较各种技术的优越性，汇总形成相关文档。
在研究学习的基础上，结合相关资料，设计出简洁的具有用户注册登录、信息查看、信息查询等功能的系统。网站实现的基本功能是：（1）信息查看：普通用户和管理员登录系统后可以进行信息查看；（2）信息查询：用户可以登录系统后进行信息查询。
1.2  研究背景及研究意义
随着个人电脑和Internet的普及推广，Web技术得到了迅猛的发展，人们开始越来越依赖网络：企业通过网络可以更有效、便捷的发布信息和推广自己新的产品；个人通过网络可以跟自己的朋友聊天、写信，可以查看新闻，可以在网上娱乐，甚至可以不用出户就可以购买自己喜欢的商品等等，网络带来无尽的便捷和乐趣。设计出好看，适用的网站就成为必要的，现在用于网站设计、开发的技术有很多，譬如ASP、JSP、ASP.NET等等。
其中JSP(Java Server Pages)是由Sun Microsystems公司倡导、许多公司参与一起建立的一种动态网页技术标准。它是在传统的网页HTML文件中插入Java程序段和JSP标记，从而形成JSP文件。JSP与Java Servlet一样，是在服务器端执行的，通常返回该客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。
ASP(Active Server Pages活动服务器页面)是一种功能强大的运用于服务器端的脚本编程环境，但是只能用VBScript或者JavaScript这样的非模块语言来编程，而且大量的HTML代码和VBScript、JavaScript代码混合在一起，使得程序员需要修改程序的时候比较困难。
而ASP.NET技术是Microsoft公司推出的新一代动态Web开发技术。ASP.NET不同于ASP和JSP，它是建立在.NET Framework之上，提供了更易于编写而且结构清晰的代码，它使用VB.NET和C#等模块化语言编写程序，提高了代码的再利用性和共享性。ASP.NET在结构上几乎完全是基于组件和模块化的，Web应用程序的开发人员使用这个开发技术可以实现更加模块化的、功能更强大的应用程序。ASP.NET技术在效率、可重用性及代码量上较ASP和JSP都有明显的优势。
使用ASP.NET技术，开发人员不需要理解HTTP、SOAP或其它任何网络服务规范。开发人员用ASP.NET生成一个扩展名为.asmx的文件，并把此文件配制为网络应用程序的一部分，就建立起了一个网络服务。 asmx文件包含对在其它地方定义的受控类的引用，或者包含这个类的定义。这个类是由ASP.NET提供的WebService类所派生。公有的类方法在标记上WebMethod属性后，就会成为网络服务方法，把HTTP请求发送到asmx文件中的URL后，这些方法就会被调用。你不必手工为你的网络服务建立一个契约。当被调用者请求时，ASP.NET检查类的元数据，以自动生成SCL文件。客户可通过SOAP，HTTP GET 和HTTP POST提交请求。对方法和参数进行编码的约定是：对HTTP GET，将被编码为查询字符串；对HTTP POST，将被编码为表单数据。HTTP GET 和HTTP POST 的机制不如SOAP有力，但是它们使得客户在访问网络服务时不必支持SOAP。
 ASP.NET 网络服务模型假定了一个无状态服务结构。无状态结构通常比有状态结构更具可扩展性。每次收到一个服务请求后，就生成一个新对象，请求被转化为一个方法调用，当该方法调用返回时对象被销毁。如果这些服务需要跨请求维护状态，那么它们将使用ASP.NET状态管理服务。基于ASP.NET的网络服务在网络应用程序模型中运行，因此它们得到了该模型的所有安全、配制和其它优点。
 ASP.NET 网络服务还提供了一个为在SCL文件中描述的网络服务生成分类的受控代理工具。代理生成器把SCL文件中描述的消息映射成受控类中的方法。代理对应用程序代码隐藏了所有的网络和引导设备，因此使用网络服务看起来就像使用其它受控代码一样。代理将优先使用SOAP链接网络服务，但是它同样支持HTTP GET和 HTTP POST机制。因此HTTP GET和 HTTP POST同样也能被使用。
网络服务为在Internet上绑定应用程序提供了一个利用现存体系架构和应用程序的简单的、灵活的、基于许多标准的模型。网络应用程序很容易与当地开发的服务或已存在的服务集成在一起，而不用考虑开发平台、开发语言或使用的对象模型，以用于实现任何组成的服务或应用程序。
Microsoft .NET框架在现有开发人员技巧之上，提供了一个应用程序模板和关键技术，用于简化安全、可靠、可扩展、高可用性的网络服务的建立、部署和不断的发展。
1.3  可行性分析
1.3.1 技术可行性研究
课题主要是理论研究，研究ASP.NET技术在网站开发中的应用，关键是要查阅大量的关于ASP.NET技术和其他网站开发技术方面的文章和书籍。学校图书馆有大量关于这方面的书籍可以借阅，另外在互联网上也有关于这方面的大量论文可以查阅。另外网站的设计主要使用的是ASP.NET技术，.NET Framework1.1框架作为微软公司已经比较成熟的产品，现在越来越多的网站开发设计都选择它。
1.3.2 经济可行性研究 
课题研究的是ASP.NET技术，设计开发的电子商务网站在PC机上就可以实现，不要考虑其他的设备。也为以后网站设计开发编程技术的选择提供了更多的技术支持。
1.4 论文各章内容介绍 
论文共分为六章，由浅至深的阐述了研究的结论并结合实例进行了说明。
第一章简要的介绍了Microsoft .NET框架，提出了课题研究的背景，并对研究课题做了调研及可行性分析。
第二章主要介绍了WEB技术的发展，简单介绍了ASP，JSP 和PHP技术，详细说明了ASP.NET技术，并将各种网站开发技术做了深入比较。
第三章全面介绍了对实例系统进行总体设计的方案。
第四章介绍系统的详细设计和各功能模块的设计及实现
第五章介绍系统的应用演示，分别以用户和管理员的身份进行了演示分析。
第六章介绍研究成果的评价及其不足的解决方案

2  课题研究分析
2.1  网站开发技术研究
2.1.1 WEB开发技术的发展
WEB程序初期，网站组成是一系列静态的网页，这种程序只允许用户浏览网站的信息，而不能和网站进行交互(即静态网页)，这就大大制约了商业的经营活动。为此，CGI技术出现，基本弥补了不能交互的缺点，是技术上的一种突破，但用户在使用CGI程序时，CGI为每个用户分配一个进程，进程是资源分配的基本单位，这样使资源不能得到完全很好的利用，并且浪费严重。由于计算机资源的有限性，限制了使用网站的用户的数量，导致用户使用中速度相对过慢，不能满足需求。与此同时Microsoft公司和网景公司均看到了CGI的不足，为此分别设计的一套API，分别是ISAPI和NSAPI，这两套API均采用线程机制，每个用户均使用一个线程与网站进行交互，他们的出现使得每个语种如DELPHI、VB等均可以设计web应用程序，WEB程序获得飞速的发展。但ISAPI和NSAPI有两个缺点:一是不太稳定，二是要求程序的设计水平较高不利于普及。1995年java出现后给网站设计带来了曙光，java是一个跨平台的程序设计语言，以其一次编译，处处运行的优势，迅速推广。与此同时网站的软件技术出现了ASP、PHP,JAVA也发展出一个分支JSP,我们一般称之为3P。3P的出现大大降低了网站设计的门槛，为网站普及起着不可磨灭的贡献。
3P的技术各有千秋。ASP是嵌入在HTML中的一种服务器端编程的WEB开发技术，即客户端请求网页时ASP文件先在服务器端编译执行，再以HTML格式传送给客户端浏览器显示，因此客户看不见ASP文件，程序的保密性较好。ASP使用的脚本语言是可扩充的，不仅可以使用默认的VBScript语言，也可以使用JAVA Script或JScript，通过plug-in的方式还可以使用Perl、TCL等第三方脚本语言。微软还提供了InterDev这样的ASP开发工具。用户在开发的时候可以使用VB/VC开发ActiveX控件，并借助微软的组件技术COM来实现几乎所有的Client/ Server方式下具有的功能。但是它所使用的语种不是完全的面向对象式语言，不利于开发大型网站程序，且运行速度较慢。
PHP是植根于Unix或Linux的一种网站开发技术，由于Unix和Linux用于大型服务器上，寻常百姓很少问津，到近些年Linux开始推广才逐渐被人们所认识。和ASP一样是在服务器进行编程的，不过PHP是GNU标准的自由软件，不仅它是免费的，和其配合使用的Apache Server 、My SQL数据库也是免费的，其源代码也是向外公开的。PHP还具有跨平台性，在 Window98, NT, Linux, Unix和Macintosh等环境下均能运行，而且代码可以重用。由于采用类似C和Perl的语言格式，PHP含有相当丰富的函数库，上载文件、存取数据库中的二进制图片数据、作图、XML解析等功能的实现，只需借助某个或某几个函数即可完成，而不像ASP那样需要引入专门的控件才可实现。PHP也有其不足。相对ASP来说，PHP的自由软件身份使得自身的发展得不到颇具实力的软件开发公司的支持，其发展具有不定性，相应的参考材料、技术支持也较匾乏。它的类似C的语言风格，使它不如ASP来得容易掌握此外，PHP提供的数据库接口函数也不统一，在访问数据库时不如ASP那么方便。    
JSP是由Sun公司推出的非常类似与ASP的一种动态网页技术标准。它也提供了在HTML代码中混合程序代码，由语言引擎进行解释执行的能力。JSP使用的是成熟强大的JAVA语言。客户端请求JSP编写的页面时，代码首先被转换成JAVA源文件，再编译成支持 HTTP, FTP等网络协议的class文件(即Servlet)，并由JAVA虚拟机执行。这种编译操作仅在对JSP页面的第一次请求时发生，虽然首次调用需几秒的编译加载时间，但后续请求只需调用服务器端缓存中的Servlets就可以了，比起每次请求都要解释执行的ASP代码要快。相对于ASP和PHP来说，JSP在跨平台可重用性和安全性上面还是有很多独到之处的。 
3P有一个共同的缺点，就是HTML网页代码和脚本混杂，大大增加了网站开发和维护的难度,另外也由于微软开发一种能JSP相抗衡的新技术，ASP.NET技术的出现基本改变了这些。ASP.NET技术使用完全的面向对象语言，网页与程序分离有利于更好的设计程序，使得代码更简洁、易于编写，不仅提高了重利用性和共享性，还提高了可调度性、可测量性、安全性和可靠性;同时，对不同的浏览器提供了更好的支持。ASP. NET能使开发人员创造出更加动态而且伸缩性更强的应用程序，这种应用程序能够更好地满足公司的商业需求，并提供一个更加丰富的开发环境。在兼容以前设计习惯的基础上采用完全的可视化设计，使windows程序和网站程序的风格区别缩小，使用任何语种都只要遵守.NET规范，都可以使用ASP.NET，使得技术的推广速度相当快。
	
2.1.2 技术比较
ASP和JSP都是使用的脚本语言混合HTML编程，特别是ASP的脚本语言属于弱类型、面向结构的编程语言，而非面向对象，这就明显产生以下几个问题：
1、代码逻辑混乱，难于管理：它使用的是脚本语言混合html编程，所以很难看清代码的逻辑关系，并且随着程序的复杂性增加，使得代码的管理十分困难，甚至超出一个程序员所能达到的管理能力，从而造成出错或这样那样的问题。 
2、代码的可重用性差：由于是面向结构的编程方式，并且混合html，所以可能页面原型修改一点，整个程序都需要修改，更别提代码重用了。 
3、弱类型造成潜在的出错可能：尽管弱数据类型的编程语言使用起来会方便一些，但相对于它所造成的出错几率就远远得不偿失的。 
以上是语言本身的弱点，在功能方面ASP同样存在问题，第一是功能太弱，一些底层操作只能通过组件来完成，在这点上甚至还远远比不上PHP/JSP，在纠错/调试功能的完善，这点上ASP/PHP/JSP差不多。
	下面是ASP和ASP.NET在具体操作编程上有什么不同。在ASP程序中，当需要使用Server对象的Create Object方法来建立一个类实例的时候，首先要声明一个变量fso，之后将变量fso赋予FileSystemObject的对象（FileSystemObject对象可以在Scripting这个库中找到）。如果想要ASP代码得以正常运行，还必须确定相关的DLL文件已经被安装并且注册到服务器。当C#运行库被安装的时候，FileSystemObject对象是会被自动注册的。但是如果想使用第三方开发的组件或者使用自己创建的组件，就需要小心安装并且注册你的组件了。其具体的代码如下：
<Script runat="server" language="VBScript">
Dim fso
Set fso = Server.CreateObject("Scripting.FileSystemObject")
</script>
而在ASP.NET中，在声明一个变量的同时，可以指定它的类型并且初始化这个变量 
为了引用一个类，需要使用这样的表示方法：名称空间[.子名称空间].类。即如：
	<Script runat="server" language="c#">
	Scripting.FileSystemObject fso = new Scripting.FileSystemObject();
	</script>
	在上面的代码中，引用了FileSystemObject这个类，而FileSystemObject这个类可以在名称空间Scripting中找到。上面的名称空间实际上只是假设的一个名称空间，它并不存在于.NET的架构当中，所以上面的代码实际上是无法运行的。
	由此可以看出ASP和ASP.NET技术的区别了。ASP.NET使用的面向对象的语言，而不是一种脚本语言，所以它具有面向对象编程语言的一切特性，比如封装性、继承性、多态性等等，这就解决了刚才谈到的ASP的那些弱点。封装性使得代码逻辑清晰，易于管理，并且应用到ASP.NET上就可以使业务逻辑和Html页面分离，这样无论页面原型如何改变，业务逻辑代码都不必做任何改动；继承性和多态性使得代码的可重用性极大的提高，你可以通过继承已有的对象最大限度保护你以前的投资。并且C#和C++、Java一样提供了完善的调试/纠错体系。
	JSP同样是实现动态网页的一个利器。由于他的脚本语言是JAVA，所以继承了JAVA诸多优点。ASP.NET和JAVA的具体的区别。其重要体现在：
1) 面向对象性: 
ASP.NET将C#作为一种面向对象语言，在很多方面来看，微软将C#成为与Java相似的语言。C#另一个有趣的地方是所有对象都自动变成为COM对象。如果C#能取得很大的市场占有量的话，那么它将给ASP.NET带来类似于Java的功能，并且具备更快的性能，因为它可以和Windows环境紧密集成。 C# 是ASP.NET开发中一个最重要的功能，这也是.NET框架的一个重要组成部分。
2) 数据库连接： 
 在ASP中的一个亮点是它使用ADO对象，ODBC, OLE-DB和事务处理管理器，因此ASP Web数据库应用开发特别简单。ASP.NET发展了更多的功能，因为有了ADO.NET，ADO.NET带来了更强大更快速的功能。JSP和JDBC目前在易用性和性能上同ASP/ADO相比已有些落后，当新版本ASP.NET/ADO.NET出现后这样的差别就更明显。
3) 大型站点应用： 
  ASP.NET将对大型站点(web farms)有更好的支持。事实上，微软在这方面付出了巨大的努力。 ASP.NET可以让你考虑到多服务器(multiple servers)的场合，当你需要更强大的功能时，仅仅只需要增加一台服务器。整个.NET框架已经充分地提供了这个方法。ASP.NET提供了外部会话状态(external session state)来提供内置式web farm的支持。另外，由于请求的各组件相互间经过了充分的优化，所以速度很快。 
于是ASP.NET现在可以在大型项目方面与JSP一样具有等同的能力。 而ASP.NET还有价格方面的优势，因为所有的组件将是服务器操作系统的一部分。对于JSP,需要购买昂贵的应用服务器群来达到同样的目的。
4) ASP.NET还提供更多的其它方面的新特性，例如： 
*内置的对象缓存和页面结果缓存。 
*内置的XML支持，可用于XML数据集的简单处理。 
*服务器控制提供了更充分的交互式控制。 
可以看出，由于JSP模型是在ASP之后，在许多方面借鉴了ASP，如：session、application等对象。同时JSP使用灵活而强大的JAVA语言，而不是低效的脚本语言，使得JSP与ASP相比，具有明显的优势。但是，ASP.NET又是在借鉴JSP的优点后推出的，这样ASP.NET又具有后发的优势。

2.1.3 ASP.NET技术研究
ASP. NET隶属于Microsoft. NET框架，是由.NET框架提供的编程类库所组成的，它提供了Web应用程序模型，并采用面向对象的思想――模块化与组件化的技术而构建。
那说到ASP.NET，就不得不先了解下.NET,其全称为Microsoft .NET。Microsoft .NET平台包括用于创建和操作新一代服务的.NET基础结构和工具；可以启用大量客户机的.NET User Experience；用于建立新一代高度分布式的数以百万计的.NET积木式组件服务；以及用于启用新一代智能互联网设备的.NET设备软件。Microsoft .NET产品和服务-包括Windows.NET，连同建立积木式服务的核心集成套件；MSNTM .NET；个人订购服务；Office.NET；Visual Studio .NET；以及用于.NET的BCentralTM。