	public void blogMapper(List<Blog> list,ResultSet rs) throws SQLException 
	{
//		while (rs.next()) 
//		{
//			Blog blog = new Blog();
//			blog.setBlogid(rs.getInt("blog_id"));
//			blog.setUsername(rs.getString("username"));
//			blog.setBlogsubject(rs.getString("blog_subject"));
//			reader = rs.getCharacterStream("blog_content");
//			int len = 0;
//			char[] buff = new char[20000];
//			try {
//				len = reader.read(buff);
//			} catch (IOException e) {
//				e.printStackTrace();
//			}
//			blog.setBlogcontent(new String(buff, 0, len));
//			blog.setBlogclass(rs.getString("blog_class"));
//			blog.setBlogdate(rs.getString("blog_date"));
//			list.add(blog);
//		}
		while (rs.next()) 
		{
			Blog blog = new Blog();
			blog.setBlogid(rs.getInt("blog_id"));
			blog.setUsername(rs.getString("username"));
			blog.setBlogsubject(rs.getString("blog_subject"));
			reader = rs.getCharacterStream("blog_content");
			//方法一：
			int len = 0;
			char[] buff = new char[20000];
			try {
				len = reader.read(buff);//一次性保存。
			} catch (IOException e) {
				e.printStackTrace();
			}
			blog.setBlogcontent(new String(buff, 0, len));
			// 方法二：貌似有问题，读取的数据不全。
			/*
			int len = 0;
			StringBuffer sb=new StringBuffer();
			char[] buff = new char[512];
			try {
				while((len=reader.read(buff))!=-1)//分块保存。
				{
					sb.append(buff);
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
			blog.setBlogcontent(sb.toString());
			*/
			blog.setBlogclass(rs.getString("blog_class"));
			blog.setBlogdate(rs.getString("blog_date"));
			list.add(blog);
		}
	}